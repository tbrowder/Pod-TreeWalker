#!/usr/bin/env raku

use Pod::TreeWalker::Subs;

my $tdir-in = "t".IO;      # .d;
my $err-out = "Errout".IO; # .d;
my $fmt-out = "Fmtout".IO; # .d;

if not @*ARGS {
    print qq:to/HERE/;
    Usage: {$*PROGRAM.basename} run | format [debug]

    run:
        Reads test files in '/t', executes the
        tests with err output to '/errout'.

    format:
        Manipulates the input file to put it into
        a format to enable easy visual inspection of
        test output to see differences between "given" 
        and "expected."

        Outputs the new formatted file to '/fmtout'

    HERE
    exit;
}

my ($run, $format, $debug) = 0, 0, 0;
for @*ARGS {
    when /^ :i r [un]? / {
        ++$run;
    }
    when /^ :i f [ormat]? / {
        ++$format;
    }
    when /^ :i d [ebug]? / {
        ++$debug;
    }
    default {
        say "FATAL: Unknown arg '$_', exiting..."; exit;
    }
}

if $run {
    exe-run :dir-in($tdir-in), :dir-out($err-out), :$debug;
}
elsif $format {
    exe-format :dir-in($err-out), :dir-out($fmt-out), :$debug;
}

