use Test;
use Pod::TreeWalker;
use lib $*PROGRAM.sibling('lib');
use TestListener;

plan 1;

#===========================================================
# 14 of 19
#===========================================================

my $pod_i = 0;

=begin pod

A simple paragraph.

And another.

=end pod

subtest {

    my $l = TestListener.new;
    Pod::TreeWalker.new(:listener($l)).walk-pod($=pod[$pod_i++]);

    my @expect = (
         { :start, :type('named'), :name('pod') },
         { :start, :type('para') },
         { :text("A simple paragraph.") },
         { :end, :type('para') },
         { :start, :type('para') },
         { :text("And another.") },
         { :end, :type('para') },
         { :end, :type('named'), :name('pod') },
    );

    is-deeply $l.events, @expect, 'got expected events';
}, 'two paragraphs';

#===========================================================
# 15 of 19
#===========================================================

# vim: expandtab shiftwidth=4
