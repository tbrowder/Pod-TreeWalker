use Test; use Pod::TreeWalker;
use lib $*PROGRAM.sibling('lib');
use TestListener;

plan 1;

#===============================================
# 26 of 26
#===============================================

my $pod_i = 0;

subtest {
    my $l = TestListener.new;

    my @pod = (
        Pod::Item.new(
            :level(1),
            :contents(['item 1']),
        ),
        Pod::Item.new(
            :level(1),
            :contents(['item 2']),
        ),
    );

    Pod::TreeWalker.new(:listener($l)).walk-pod(@pod);

    my @expect = (
         { :start, :type('list'), :level(1), :!numbered },
         { :start, :type('item'), :level(1) },
         { :text('item 1') },
         { :end, :type('item'), :level(1) },
         { :start, :type('item'), :level(1) },
         { :text('item 2') },
         { :end, :type('item'), :level(1) },
         { :end, :type('list'), :level(1), :!numbered },
    );

    is-deeply $l.events, @expect, 'got expected events';
}, 'list of pod objects created directly';

#===============================================
# Last of 26
#===============================================

# vim: expandtab shiftwidth=4
